package zolbee2;


import java.awt.Color;
import java.awt.event.KeyEvent;
import java.util.Arrays;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import java.sql.*;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JDialog;
import javax.swing.JFrame;


/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Consumos.java
 *
 * Created on 22/03/2010, 05:24:29 PM
 */

/**
 *
 * @author roberto
 */
public class Consumos extends javax.swing.JFrame {

    boolean activar=false;
    public static String IDsocio = null;
    public static String NO_tar = null;
    int contador = 0;
    public static String idempleado = null;
    public static String nombreempleado = null;
    public static String nombresucursal = null;
    int longi = 0;
    int longi1 = 0;
    int longi2 = 0;
    int longi3 = 0;
    int longi4 = 0;
    int longi5 = 0;
    String conexion = Funciones.conectar;

   //private DefaultTableModel t_MontoPro;

    /** Creates new form Consumos */
    public Consumos(String id,String empleado, String sucursal) {
     // t_MontoPro = new DefaultTableModel(new  Object[]{"ID","DESCRIPCION", "PRECIO VENTA","DESCUENTO","TOTAL"},0);
      /*t_MontoPro.addColumn("ID");
      t_MontoPro.addColumn("DESCRIPCION");
      t_MontoPro.addColumn("PRECIO VENTA");
      t_MontoPro.addColumn("DESCUENTO");
      t_MontoPro.addColumn("TOTAL");*/


      // Agregar las columnas que se necesiten utilizando el método
      // addColumn(Object columnName) de DefaultTableModel.
      // También es posible utilizar un constructor sobrecargado
      // que recibe como parámetros un vector Object[] { ... } cuyos
      // elementos son los nombres de las columnas y un int con la
      // cantidad inicial de filas (se crean vacías):
      // DefaultTableModel(new Object[] { "Col 1", "Col 2" }, 5)




        idempleado = id;
        nombreempleado = empleado;
        nombresucursal = sucursal;
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */

    


    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        vPromociones = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        t_MontoPro = new javax.swing.JTable();
        b_AgregarCon = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        b_AceptarC = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        l_nombre = new javax.swing.JLabel();
        l_estatus = new javax.swing.JLabel();
        l_tipotarjeta = new javax.swing.JLabel();
        b_Cancelar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        l_Subtotal = new javax.swing.JLabel();
        l_Ahorro = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        l_Total = new javax.swing.JLabel();
        v_Monto = new javax.swing.JTextField();
        vSoc1 = new javax.swing.JTextField();
        vSoc2 = new javax.swing.JTextField();
        vSoc3 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(zolbee2.Zolbee2App.class).getContext().getResourceMap(Consumos.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setBackground(resourceMap.getColor("Form.background")); // NOI18N
        setName("Form"); // NOI18N
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel2.setFont(resourceMap.getFont("jLabel2.font")); // NOI18N
        jLabel2.setForeground(resourceMap.getColor("jLabel2.foreground")); // NOI18N
        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jLabel3.setFont(resourceMap.getFont("jLabel3.font")); // NOI18N
        jLabel3.setForeground(resourceMap.getColor("jLabel3.foreground")); // NOI18N
        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        vPromociones.setName("vPromociones"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        t_MontoPro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DESCRIPCION", "PRECIO VENTA", "DESCUENTO", "AHORRO", "TOTAL A PAGAR"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        t_MontoPro.setName("t_MontoPro");
        t_MontoPro.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        t_MontoPro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                t_MontoProKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(t_MontoPro);

        b_AgregarCon.setText(resourceMap.getString("b_AgregarCon.text")); // NOI18N
        b_AgregarCon.setName("b_AgregarCon"); // NOI18N
        b_AgregarCon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                b_AgregarConMouseReleased(evt);
            }
        });
        b_AgregarCon.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                b_AgregarConKeyPressed(evt);
            }
        });

        jLabel4.setFont(resourceMap.getFont("jLabel4.font")); // NOI18N
        jLabel4.setForeground(resourceMap.getColor("jLabel4.foreground")); // NOI18N
        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        jLabel5.setFont(resourceMap.getFont("jLabel5.font")); // NOI18N
        jLabel5.setForeground(resourceMap.getColor("jLabel5.foreground")); // NOI18N
        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N

        jLabel6.setFont(resourceMap.getFont("jLabel6.font")); // NOI18N
        jLabel6.setForeground(resourceMap.getColor("jLabel6.foreground")); // NOI18N
        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N

        jLabel7.setFont(resourceMap.getFont("jLabel7.font")); // NOI18N
        jLabel7.setForeground(resourceMap.getColor("jLabel7.foreground")); // NOI18N
        jLabel7.setText(resourceMap.getString("jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N

        b_AceptarC.setText(resourceMap.getString("b_AceptarC.text")); // NOI18N
        b_AceptarC.setName("b_AceptarC"); // NOI18N
        b_AceptarC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                b_AceptarCMouseReleased(evt);
            }
        });
        b_AceptarC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                b_AceptarCKeyPressed(evt);
            }
        });

        jLabel8.setFont(resourceMap.getFont("jLabel8.font")); // NOI18N
        jLabel8.setForeground(resourceMap.getColor("jLabel8.foreground")); // NOI18N
        jLabel8.setText(resourceMap.getString("jLabel8.text")); // NOI18N
        jLabel8.setName("jLabel8"); // NOI18N

        l_nombre.setFont(resourceMap.getFont("l_nombre.font")); // NOI18N
        l_nombre.setForeground(resourceMap.getColor("l_nombre.foreground")); // NOI18N
        l_nombre.setText(resourceMap.getString("l_nombre.text")); // NOI18N
        l_nombre.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        l_nombre.setName("l_nombre"); // NOI18N

        l_estatus.setFont(resourceMap.getFont("l_estatus.font")); // NOI18N
        l_estatus.setForeground(resourceMap.getColor("l_estatus.foreground")); // NOI18N
        l_estatus.setText(resourceMap.getString("l_estatus.text")); // NOI18N
        l_estatus.setName("l_estatus"); // NOI18N

        l_tipotarjeta.setFont(resourceMap.getFont("l_tipotarjeta.font")); // NOI18N
        l_tipotarjeta.setForeground(resourceMap.getColor("l_tipotarjeta.foreground")); // NOI18N
        l_tipotarjeta.setText(resourceMap.getString("l_tipotarjeta.text")); // NOI18N
        l_tipotarjeta.setName("l_tipotarjeta"); // NOI18N

        b_Cancelar.setText(resourceMap.getString("b_Cancelar.text")); // NOI18N
        b_Cancelar.setName("b_Cancelar"); // NOI18N
        b_Cancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                b_CancelarMouseReleased(evt);
            }
        });
        b_Cancelar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                b_CancelarKeyPressed(evt);
            }
        });

        jLabel1.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
        jLabel1.setForeground(resourceMap.getColor("jLabel1.foreground")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        l_Subtotal.setFont(resourceMap.getFont("l_Subtotal.font")); // NOI18N
        l_Subtotal.setForeground(resourceMap.getColor("l_Subtotal.foreground")); // NOI18N
        l_Subtotal.setText(resourceMap.getString("l_Subtotal.text")); // NOI18N
        l_Subtotal.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        l_Subtotal.setName("l_Subtotal"); // NOI18N

        l_Ahorro.setFont(resourceMap.getFont("l_Ahorro.font")); // NOI18N
        l_Ahorro.setForeground(resourceMap.getColor("l_Ahorro.foreground")); // NOI18N
        l_Ahorro.setText(resourceMap.getString("l_Ahorro.text")); // NOI18N
        l_Ahorro.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        l_Ahorro.setName("l_Ahorro"); // NOI18N

        jLabel9.setFont(resourceMap.getFont("jLabel9.font")); // NOI18N
        jLabel9.setForeground(resourceMap.getColor("jLabel9.foreground")); // NOI18N
        jLabel9.setText(resourceMap.getString("jLabel9.text")); // NOI18N
        jLabel9.setName("jLabel9"); // NOI18N

        l_Total.setFont(resourceMap.getFont("l_Total.font")); // NOI18N
        l_Total.setForeground(resourceMap.getColor("l_Total.foreground")); // NOI18N
        l_Total.setText(resourceMap.getString("l_Total.text")); // NOI18N
        l_Total.setName("l_Total"); // NOI18N

        v_Monto.setText(resourceMap.getString("v_Monto.text")); // NOI18N
        v_Monto.setName("v_Monto"); // NOI18N

        vSoc1.setFont(resourceMap.getFont("vSoc1.font")); // NOI18N
        vSoc1.setText(resourceMap.getString("vSoc1.text")); // NOI18N
        vSoc1.setName("vSoc1"); // NOI18N
        vSoc1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                vSoc1KeyReleased(evt);
            }
        });

        vSoc2.setFont(resourceMap.getFont("vSoc2.font")); // NOI18N
        vSoc2.setText(resourceMap.getString("vSoc2.text")); // NOI18N
        vSoc2.setName("vSoc2"); // NOI18N
        vSoc2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                vSoc2KeyReleased(evt);
            }
        });

        vSoc3.setFont(resourceMap.getFont("vSoc3.font")); // NOI18N
        vSoc3.setText(resourceMap.getString("vSoc3.text")); // NOI18N
        vSoc3.setName("vSoc3"); // NOI18N
        vSoc3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                vSoc3KeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addGap(34, 34, 34)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(vSoc1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(vSoc2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(vSoc3, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(l_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(vPromociones, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jLabel2))))
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(jLabel1))
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(l_estatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(v_Monto, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(b_AgregarCon)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(l_tipotarjeta, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 988, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(12, 12, 12)
                                    .addComponent(jLabel7))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addComponent(b_Cancelar, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(l_Ahorro)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(b_AceptarC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(l_Subtotal, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                                .addComponent(l_Total)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(vSoc3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(vSoc2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(vSoc1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l_estatus, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l_tipotarjeta, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(vPromociones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(2, 2, 2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel1)
                            .addComponent(v_Monto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(b_AgregarCon))))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(l_Subtotal))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(l_Ahorro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(l_Total)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b_AceptarC)
                    .addComponent(b_Cancelar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void b_CancelarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_CancelarMouseReleased
        // TODO add your handling code here:
        salir();
    }//GEN-LAST:event_b_CancelarMouseReleased

    private void b_CancelarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_b_CancelarKeyPressed
        // TODO add your handling code here:
        salir();
    }//GEN-LAST:event_b_CancelarKeyPressed

    private void b_AgregarConKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_b_AgregarConKeyPressed
        // TODO add your handling code here:
         if (evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            try {
                agregarConsumo();
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Consumos.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_b_AgregarConKeyPressed

    private void b_AgregarConMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_AgregarConMouseReleased
        try {
            // TODO add your handling code here:
            agregarConsumo();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Consumos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_b_AgregarConMouseReleased

    private void b_AceptarCKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_b_AceptarCKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            try {
                guardarConsumo();
            } catch (Exception ex) {
                Logger.getLogger(Consumos.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_b_AceptarCKeyPressed

    private void b_AceptarCMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_AceptarCMouseReleased
        try {
            // TODO add your handling code here:
            guardarConsumo();
        } catch (Exception ex) {
            Logger.getLogger(Consumos.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_b_AceptarCMouseReleased

    private void t_MontoProKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_t_MontoProKeyPressed
        // TODO add your handling code here:
 if (evt.getKeyCode() == KeyEvent.VK_DELETE)
     {
        int fila = t_MontoPro.getSelectedRow();
        double v_subtotal = 0;
        double v_desc = 0;
        double v_total = 0;
        

         DefaultTableModel modelo = (DefaultTableModel) t_MontoPro.getModel();

         modelo.removeRow(t_MontoPro.getSelectedRow());
         contador++;
         activar=true;

           for(int i=0;i<Consumos.t_MontoPro.getColumnCount();i++)
            {
               for(int j=0;j<Consumos.t_MontoPro.getRowCount();j++)
               {
                   if(i==1)
                    {
                        String consumo = Consumos.t_MontoPro.getValueAt(j, i).toString();
                        float cons = Float.parseFloat(consumo);
                        v_subtotal = v_subtotal + cons;
                    }
                    if(i==2)
                    {
                          String consumo = Consumos.t_MontoPro.getValueAt(j, i).toString();
                          float cons = Float.parseFloat(consumo);
                          v_desc = v_desc + cons;
                    }

               }
            }


          v_total = Funciones.Redondear(v_subtotal - v_desc,2);
          l_Subtotal.setText(String.valueOf(Funciones.Redondear(v_subtotal,2)));
          l_Ahorro.setText(String.valueOf(Funciones.Redondear(v_desc, 2)));
          l_Total.setText(String.valueOf(v_total));


 }
                 
    }//GEN-LAST:event_t_MontoProKeyPressed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        Funciones.inicializarI();
        System.out.println(idempleado+" "+nombresucursal+" "+nombreempleado);
    }//GEN-LAST:event_formWindowOpened

    private void vSoc1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_vSoc1KeyReleased
        // TODO add your handling code here:
        String num = vSoc1.getText();
        String string = null;
        Funciones funcione = new Funciones();
        System.out.println(num);
        funcione.validarTextNum(num);

        if(funcione.bandera==1)
        {

            vSoc1.setText(funcione.subcadena);
           int longitud = funcione.subcadena.length();
           if(longitud==4)
           {
                 vSoc2.requestFocus ();
           }

        }


        int longitud = vSoc1.getText().length();
          System.out.println("longitud"+" "+longitud);
            if(longitud>=4)
           {
                 vSoc2.requestFocus ();
           }



          if(longitud>4)
            {

                 int longitud2 = vSoc1.getText().length()-1;
                  System.out.println(longitud);
                  string = vSoc1.getText().substring(0, longitud2);
                  vSoc1.setText(string);

            } // fin de if

    }//GEN-LAST:event_vSoc1KeyReleased

    private void vSoc2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_vSoc2KeyReleased
        // TODO add your handling code here:
         String num = vSoc2.getText();
        Funciones funcione2 = new Funciones();
        String string = null;
        System.out.println(num);
        funcione2.validarTextNum(num);
       

        if(funcione2.bandera==1)
        {

            vSoc2.setText(funcione2.subcadena);
            //int longitud = vSoc2.getText().length();
           
        } // fin de if

         int longitud = vSoc2.getText().length();
          System.out.println("longitud"+" "+longitud);
            if(longitud>=4)
           {
                 vSoc3.requestFocus ();
           } // fin de if
            if(longitud>4)
            {

                 int longitud2 = vSoc2.getText().length()-1;
                 System.out.println(longitud);
                 string = vSoc2.getText().substring(0, longitud2);
                vSoc2.setText(string);

            } // fin de if


          if (evt.getKeyCode() == KeyEvent.VK_BACK_SPACE)
           {
               System.out.println("entro a back espace");
               if(longitud==0)
               {

                    vSoc1.requestFocus ();

               }

          }
        
    }//GEN-LAST:event_vSoc2KeyReleased

    private void vSoc3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_vSoc3KeyReleased
        // TODO add your handling code here:
        String num = vSoc3.getText();
        String string = null;
        Funciones funcione = new Funciones();
        System.out.println(num);
        funcione.validarTextNum(num);

         if (evt.getKeyCode() == KeyEvent.VK_ENTER)
         {
             buscaridSocio();
         }

        if(funcione.bandera==1)
        {

            vSoc3.setText(funcione.subcadena);


        }


        int longitud = vSoc3.getText().length();
          System.out.println("longitud"+" "+longitud);
            if(longitud>4)
           {
                int longitud2 = vSoc3.getText().length()-1;
         // System.out.println(longitud);
                  string = vSoc3.getText().substring(0, longitud2);
                  vSoc3.setText(string);
                 //vSoc3.getText().leng

           }

      if (evt.getKeyCode() == KeyEvent.VK_BACK_SPACE)
      {
             System.out.println("entro a back espace");
            if(longitud==0)
            {
                
                vSoc2.requestFocus ();
                
            }



      }


    }//GEN-LAST:event_vSoc3KeyReleased

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Consumos(idempleado,nombreempleado,nombresucursal).setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b_AceptarC;
    private javax.swing.JButton b_AgregarCon;
    private javax.swing.JButton b_Cancelar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    public static javax.swing.JLabel l_Ahorro;
    public static javax.swing.JLabel l_Subtotal;
    public static javax.swing.JLabel l_Total;
    public static javax.swing.JLabel l_estatus;
    public static javax.swing.JLabel l_nombre;
    public static javax.swing.JLabel l_tipotarjeta;
    public static javax.swing.JTable t_MontoPro;
    public static javax.swing.JComboBox vPromociones;
    private javax.swing.JTextField vSoc1;
    private javax.swing.JTextField vSoc2;
    private javax.swing.JTextField vSoc3;
    public static javax.swing.JTextField v_Monto;
    // End of variables declaration//GEN-END:variables


   public void agregarConsumo() throws ClassNotFoundException
   {
      
       boolean bandera = false; // declaramos una variable boolena que nos servira como bandera
       int cont=0;
       int z=0;
       int suma = vSoc1.getText().length()+vSoc2.getText().length()+vSoc3.getText().length();

       
       //Funciones.imprimirMsj(vIDSocio.getText());
       //Funciones.imprimirMsj(vPromociones.getSelectedItem().toString());
       //Funciones.imprimirMsj(v_Monto.getText());



      if( vSoc1.getText().equals("") || vSoc2.getText().equals("") || vSoc3.getText().equals("")|| v_Monto.getText().equals(""))
       {
          bandera=true;
          Funciones.imprimirMsj("ID socio es requerido, debe de contener una promocion y debe de ingresar un monto");

       } // fin de if

       if(bandera==false)
       {
          String idusuario = vSoc1.getText() + vSoc2.getText() + vSoc3.getText();   // recibimos el valor del campo texto vIDSocio
          String promo = vPromociones.getSelectedItem().toString(); // recibimos el valor del campo texto vPromociones
          String mnt = v_Monto.getText();  // recibimos el valor
          Funciones funcion = new Funciones(); // instanciamos funcion de la clase Funciones
          funcion.validarTextDec(mnt); // mandamos a llamar al método validarTextDec

          if(suma==12)
          {
            if(funcion.bandera==0)
             {
                float monto = Float.parseFloat(v_Monto.getText()); // recibimos el valor del campo de lista v_Monto y  convertimos su valor a int
                String arraypr[] = null; // declaramos un arreglo unidimencional para guardar el valor al hacer split en promo
                arraypr = promo.split("-"); // guardamos en el array los valores que obtuvimos del split

                try {
                // TODO add your handling code here:
                Funciones.agregarMontoPromo(idusuario,arraypr,monto,activar,contador);
                } catch (Exception ex) {
                 Logger.getLogger(Consumos.class.getName()).log(Level.SEVERE, null, ex);
                }

               
                activar=false;
                contador=0;
          }
          else
          {
             Funciones.imprimirMsj("Lo Ingresado en el Monto no es valido intentelo de nuevo");
             v_Monto.setText("");
          }
       }

          else
          {

              Funciones.imprimirMsj("El ID Socio debe estar completo");
          }

       } // fin de if

   } // fin del método agregarConsumo

  public void buscaridSocio()
  {
      String idsocio = vSoc1.getText();
      String idsocio2 = vSoc2.getText();
      String idsocio3 = vSoc3.getText();
      int suma = vSoc1.getText().length()+vSoc2.getText().length()+vSoc3.getText().length();
      
      String idsociob = idsocio+idsocio2+idsocio3;
      //Funciones.imprimirMsj(idsociob);

        if(idsocio.equals("") || idsocio2.equals("") || idsocio3.equals(""))
        {
           Funciones.imprimirMsj("Necesita llenar el campo del id socio para realizar la busqueda");
        }




     
      if(suma==12)
        {
          Funciones funcion = new Funciones();
          funcion.llenarPromocion(idsociob);
          if(funcion.bandera2==true)
          {
             vSoc1.setEditable(false);
             vSoc2.setEditable(false);
             vSoc3.setEditable(false);
          }
        
      }

      else
      {
          Funciones.imprimirMsj("Falta 4 digitos en unos de los campos idsocio");
      }
  }


   public void salir ()
   {
       this.dispose();
   }


public boolean sumarIDSocios(int a, int b, int c)
{

    int suma = a+b+c;
    boolean result = false;


    if(suma==12)
    {
        result=true;
    }

    return result;

} // fin de método sumarIDSocios




public void guardarConsumo () throws Exception
{
     int i =JOptionPane.showConfirmDialog(this,"¿Desea Realmente Guardar el Total de consumos?","Confirmar Consumos",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
     boolean band = false;
     int autoincrementoJava = -1;

     if(i==0)
     {


       if(t_MontoPro.getRowCount()>0)
       {
           //System.exit(0);
           String conectar = conexion;  // establesco mi conexion a la base de datos
           Connection conn = null; // declaro mi conexion
           Class.forName("com.mysql.jdbc.Driver"); // establesco el driver del jdbc

          try
          {
             conn = DriverManager.getConnection(conectar);
             conn.setAutoCommit(false);  // creamos el commit
             Statement st = conn.createStatement();
             LeeFichero leerFichero = new LeeFichero ();
             leerFichero.leerFichero();
             String idsucursal = leerFichero.vsucusal;
             //String idsocio = vSoc2.getText()+vSoc3.getText().substring(0, 2);
             //Funciones.imprimirMsj(IDsocio);
             String idsocio = IDsocio;
             String no_tarjetazolbee = NO_tar;
             String Idempleado = idempleado;
             String nomempleado = nombreempleado;
             String nomsocio = l_nombre.getText();
             String nomsucursal = nombresucursal;
             Float monto = Float.parseFloat(l_Total.getText());
             //java.util.Date fecha = new Date();
             /*Calendar c1 = Calendar.getInstance();
          
             String dia = Integer.toString(c1.get(Calendar.DAY_OF_MONTH));
          
             String anio = Integer.toString(c1.get(Calendar.YEAR));
             String hra = Integer.toString(c1.get(Calendar.HOUR_OF_DAY));
             String min = Integer.toString(c1.get(Calendar.MINUTE));
             String mes = null;
             mes = Integer.toString(c1.get(Calendar.MONTH));
             if(c1.get(Calendar.MONTH)<10)
             {
                 System.out.println("es menos");
                 mes = "0"+Integer.toString(c1.get(Calendar.MONTH));
             }
          
                 String fecha_actual =anio+"/"+mes+"/"+dia+" "+hra+":"+min;*/
                 // Funciones.imprimirMsj(fecha_actual);
             System.out.println(no_tarjetazolbee);
             st.execute("INSERT INTO movimientos (fecha, idempleado, nombreempleado, idsocio, nombresocio,idsucursal,no_tarjetazolbee,total,nombresucu) " +
                     "VALUES (NOW(),"+Idempleado+",'"+nomempleado+"',"+idsocio+",'"+nomsocio+"',"+idsucursal+",'"+no_tarjetazolbee+"',"+monto+",'"+nomsucursal+"')",
             Statement.RETURN_GENERATED_KEYS);//insertamos el movimiento del consumo y obtenemos el id generado

             //int autoincrementoJava = -1;

	     ResultSet resulset = st.getGeneratedKeys();

	     if (resulset.next()) {
	     // al llamar el método getGeneratedKeys(); devuelve una tabla con una sola columna, solo vamos a usar la columna con índice 1 de tipo int
	     autoincrementoJava= resulset.getInt(1);
	     } else {
	     // agregar una excepcion acá
	     }
	     resulset.close();

             System.out.println(autoincrementoJava);
             System.out.println("numero de filas"+" "+Consumos.t_MontoPro.getRowCount());
         
             for(int y=0;y<Consumos.t_MontoPro.getRowCount();y++)
             {
                String descv = Consumos.t_MontoPro.getValueAt(y,0).toString(); // guardamos el id de promociones
                String pv = Consumos.t_MontoPro.getValueAt(y,1).toString(); // guardamos la desripcion de la promoción
                String desc = Consumos.t_MontoPro.getValueAt(y,2).toString(); // guardamos el precio venta de promoción
                String total = Consumos.t_MontoPro.getValueAt(y,3).toString(); // guardamos el descuento de la promoción
                String por_desc = Consumos.t_MontoPro.getValueAt(y,4).toString(); // guardamos el total de promoción
                float iva = (float) Funciones.Redondear((float) (Float.parseFloat(total) * 0.16),2);
              
                st.execute("INSERT INTO des_movimientos (idmovimiento, descripcion, p_venta, ahorro, total, iva, p_descuento) " +
                            "VALUES ("+autoincrementoJava+",'"+descv+"',"+pv+","+desc+","+total+","+iva+","+por_desc+")");
             } // fin de for
         
          conn.commit();
          band = true;
          System.out.println("Transaction commit...");

      } // fin de try
      catch (SQLException e)
      {
         if (conn != null)
         {
            conn.rollback(); // si hay alguna excepcion de SQL la transaccion no se ejecuta y los cambios hechos se descartan
            band = false;
            System.out.println("Connection rollback...");
            Funciones.imprimirMsj("Lo Sentimos Hubo un Problema en la Transaccion Intente de Nuevo");
         } // fin if
         e.printStackTrace();
      } // fin de catch


      finally
      {
         if (conn != null && !conn.isClosed())
         {
            conn.close();
         }

      }

      } // fin de 2 if

       else
       {
         JOptionPane.showMessageDialog(this,"No puede Guardar un Consumo hace falta el id socio o no ha agregado ningun consumo",null,JOptionPane.WARNING_MESSAGE);
       }
} // fin de if

if(band==true)
{
  //Funciones.imprimirMsj("El Consumo ha Sido Guardado Correctamente, el No. de Movimiento fue:"+" "+ Integer.toString(autoincrementoJava));

  
  JOptionPane.showMessageDialog(this, "El Consumo ha Sido Guardado Correctamente, el No. de Movimiento fue:"+" "+ Integer.toString(autoincrementoJava),"Numero de Movimiento", JOptionPane.INFORMATION_MESSAGE);
  Consumos consumo = new Consumos (idempleado,nombreempleado,nombresucursal);
  consumo.setLocationRelativeTo(null);
  consumo.getContentPane().setBackground(Color.decode("#7329ab"));
  consumo.setIconImage(null);
  consumo.setVisible(true);
  salir();
}

} // fin método guardarConsumo


}

