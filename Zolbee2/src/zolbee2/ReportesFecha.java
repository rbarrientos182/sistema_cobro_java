/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ReportesFecha.java
 *
 * Created on 30/03/2010, 05:51:46 PM
 */

package zolbee2;

import java.awt.Color;
import java.awt.Font;
import java.awt.event.KeyEvent;
import java.sql.*;
import java.text.DateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.*;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.*;
import net.sf.jasperreports.view.save.JRPdfSaveContributor.*;
import net.sf.jasperreports.view.JRViewer;
import net.sf.jasperreports.view.save.JRMultipleSheetsXlsSaveContributor;
/**
 *
 * @author roberto
 */
public class ReportesFecha extends javax.swing.JFrame {


    private IniciarReporteFecha jasper ;
    String conexion = Funciones.conectar;
    int in = 0;
    int registros = 20;
    int rest_sum = 20;

    /** Creates new form ReportesFecha */
    public ReportesFecha() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        v_Calendar = new org.freixas.jcalendar.JCalendarCombo();
        B_realizarbusqueda = new javax.swing.JButton();
        v_Calendar2 = new org.freixas.jcalendar.JCalendarCombo();
        jScrollPane1 = new javax.swing.JScrollPane();
        vTReportes = new javax.swing.JTable();
        VAnterior = new javax.swing.JButton();
        VSiguiente = new javax.swing.JButton();
        B_ImprimirFechas = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(zolbee2.Zolbee2App.class).getContext().getResourceMap(ReportesFecha.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setBackground(resourceMap.getColor("Form.background")); // NOI18N
        setName("Form"); // NOI18N
        setResizable(false);

        v_Calendar.setBackground(resourceMap.getColor("v_Calendar.background")); // NOI18N
        v_Calendar.setBorder(javax.swing.BorderFactory.createTitledBorder(null, resourceMap.getString("v_Calendar.border.title"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), resourceMap.getColor("v_Calendar.border.titleColor"))); // NOI18N
        v_Calendar.setForeground(resourceMap.getColor("v_Calendar.foreground")); // NOI18N
        v_Calendar.setDate(new java.util.Date(1270055632000L));
        v_Calendar.setName("v_Calendar"); // NOI18N
        v_Calendar.setOpaque(false);

        B_realizarbusqueda.setText(resourceMap.getString("B_realizarbusqueda.text")); // NOI18N
        B_realizarbusqueda.setName("B_realizarbusqueda"); // NOI18N
        B_realizarbusqueda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                B_realizarbusquedaMouseReleased(evt);
            }
        });
        B_realizarbusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                B_realizarbusquedaKeyReleased(evt);
            }
        });

        v_Calendar2.setBackground(resourceMap.getColor("v_Calendar2.background")); // NOI18N
        v_Calendar2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, resourceMap.getString("v_Calendar2.border.title"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), resourceMap.getColor("v_Calendar2.border.titleColor"))); // NOI18N
        v_Calendar2.setForeground(resourceMap.getColor("v_Calendar2.foreground")); // NOI18N
        v_Calendar2.setName("v_Calendar2"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        vTReportes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Movimiento", "Fecha", "Sucursal", "Clave Empleado", "No Tarjeta", "Nombre Socio", "Monto"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        vTReportes.setName("vTReportes"); // NOI18N
        vTReportes.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        vTReportes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                vTReportesMouseReleased(evt);
            }
        });
        vTReportes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                vTReportesKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(vTReportes);

        VAnterior.setText(resourceMap.getString("VAnterior.text")); // NOI18N
        VAnterior.setEnabled(false);
        VAnterior.setName("VAnterior"); // NOI18N
        VAnterior.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                VAnteriorMouseReleased(evt);
            }
        });
        VAnterior.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                VAnteriorKeyReleased(evt);
            }
        });

        VSiguiente.setText(resourceMap.getString("VSiguiente.text")); // NOI18N
        VSiguiente.setEnabled(false);
        VSiguiente.setName("VSiguiente"); // NOI18N
        VSiguiente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                VSiguienteMouseReleased(evt);
            }
        });
        VSiguiente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                VSiguienteKeyReleased(evt);
            }
        });

        B_ImprimirFechas.setIcon(resourceMap.getIcon("B_ImprimirFechas.icon")); // NOI18N
        B_ImprimirFechas.setText(resourceMap.getString("B_ImprimirFechas.text")); // NOI18N
        B_ImprimirFechas.setEnabled(false);
        B_ImprimirFechas.setName("B_ImprimirFechas"); // NOI18N
        B_ImprimirFechas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                B_ImprimirFechasMouseReleased(evt);
            }
        });
        B_ImprimirFechas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                B_ImprimirFechasKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(154, 154, 154)
                .addComponent(VAnterior)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 357, Short.MAX_VALUE)
                .addComponent(VSiguiente)
                .addGap(154, 154, 154))
            .addGroup(layout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(v_Calendar, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
                        .addGap(134, 134, 134)
                        .addComponent(v_Calendar2, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(226, 226, 226)
                        .addComponent(B_realizarbusqueda, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
                        .addGap(86, 86, 86)
                        .addComponent(B_ImprimirFechas, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)))
                .addGap(95, 95, 95))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 793, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(v_Calendar, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(v_Calendar2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(B_realizarbusqueda)
                    .addComponent(B_ImprimirFechas, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(VSiguiente)
                    .addComponent(VAnterior))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void B_realizarbusquedaMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_B_realizarbusquedaMouseReleased
        // TODO add your handling code here:
   boolean band = false;
        boolean actv = false;

        //DateFormat fecha = v_Calendar
        String year = Integer.toString(v_Calendar.getCalendar().get(java.util.Calendar.YEAR));
        String month = Integer.toString(v_Calendar.getCalendar().get(java.util.Calendar.MONTH)+1);
        String day = Integer.toString(v_Calendar.getCalendar().get(java.util.Calendar.DATE));

        String year2 = Integer.toString(v_Calendar2.getCalendar().get(java.util.Calendar.YEAR));
        String month2 = Integer.toString(v_Calendar2.getCalendar().get(java.util.Calendar.MONTH)+1);
        String day2 = Integer.toString(v_Calendar2.getCalendar().get(java.util.Calendar.DATE));

        //System.out.println(year+"-"+month+"-"+day);
        //System.out.println(year2+"-"+month2+"-"+day2);
        String fecha_in = year+"-"+month+"-"+day;
        String fecha_fin = year2+"-"+month2+"-"+day2;
   if(v_Calendar2.getCalendar().get(java.util.Calendar.YEAR)<v_Calendar.getCalendar().get(java.util.Calendar.YEAR))
   {
        band = true;

   }

   else if (v_Calendar2.getCalendar().get(java.util.Calendar.YEAR)==v_Calendar.getCalendar().get(java.util.Calendar.YEAR))
   {
          if(v_Calendar2.getCalendar().get(java.util.Calendar.MONTH)<v_Calendar.getCalendar().get(java.util.Calendar.MONTH))
          {
              band = true;
          }

          else if (v_Calendar2.getCalendar().get(java.util.Calendar.MONTH)==v_Calendar.getCalendar().get(java.util.Calendar.MONTH))
          {
                    if(v_Calendar2.getCalendar().get(java.util.Calendar.DATE)<v_Calendar.getCalendar().get(java.util.Calendar.DATE))
                    {
                         band = true;
                    }


          }
   }
        if(band == false)
        {
           try {
               in = 0;
               actv = true;
               reporteFecha(fecha_in, fecha_fin,in,registros,actv);
            } catch (ClassNotFoundException ex) {
               Logger.getLogger(ReportesFecha.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        if(band == true)
        {
           Funciones.imprimirMsj("La fecha Fin Debe Ser Mayor a la Fecha Inicio");
            vTReportes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Movimiento", "Fecha", "Sucursal", "Clave Empleado", "No. Tarjeta", "Nombre Socio", "Monto"
            }
            ) {

            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

           boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

                @Override
              public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

                @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        vTReportes.setName("vTReportes"); // NOI18N
        jScrollPane1.setViewportView(vTReportes);
         vTReportes.setRowHeight(14);
          vTReportes.setEditingRow(5);
          javax.swing.table.TableColumn colum= null;

          colum = vTReportes.getColumnModel().getColumn(0); // movimiento
          colum.setPreferredWidth(70);

          colum = vTReportes.getColumnModel().getColumn(1); // fecha
          colum.setPreferredWidth(120);

          colum = vTReportes.getColumnModel().getColumn(2); // sucursal
          colum.setPreferredWidth(283);

          colum = vTReportes.getColumnModel().getColumn(3); // clave empleado
          colum.setPreferredWidth(100);
      
          colum = vTReportes.getColumnModel().getColumn(4); // tarjeta
          colum.setPreferredWidth(83);

          colum = vTReportes.getColumnModel().getColumn(5); // socio
          colum.setPreferredWidth(243);

          colum = vTReportes.getColumnModel().getColumn(6); // monto
          colum.setPreferredWidth(70);

        }
        
    }//GEN-LAST:event_B_realizarbusquedaMouseReleased

    private void B_realizarbusquedaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_B_realizarbusquedaKeyReleased
        // TODO add your handling code here:
         if (evt.getKeyCode() == KeyEvent.VK_ENTER)
        {

            boolean band = false;
            boolean actv = false;

        //DateFormat fecha = v_Calendar
        String year = Integer.toString(v_Calendar.getCalendar().get(java.util.Calendar.YEAR));
        String month = Integer.toString(v_Calendar.getCalendar().get(java.util.Calendar.MONTH)+1);
        String day = Integer.toString(v_Calendar.getCalendar().get(java.util.Calendar.DATE));

        String year2 = Integer.toString(v_Calendar2.getCalendar().get(java.util.Calendar.YEAR));
        String month2 = Integer.toString(v_Calendar2.getCalendar().get(java.util.Calendar.MONTH)+1);
        String day2 = Integer.toString(v_Calendar2.getCalendar().get(java.util.Calendar.DATE));

        //System.out.println(year+"-"+month+"-"+day);
        //System.out.println(year2+"-"+month2+"-"+day2);
        String fecha_in = year+"-"+month+"-"+day;
        String fecha_fin = year2+"-"+month2+"-"+day2;
   if(v_Calendar2.getCalendar().get(java.util.Calendar.YEAR)<v_Calendar.getCalendar().get(java.util.Calendar.YEAR))
   {
        band = true;

   }

   else if (v_Calendar2.getCalendar().get(java.util.Calendar.YEAR)==v_Calendar.getCalendar().get(java.util.Calendar.YEAR))
   {
          if(v_Calendar2.getCalendar().get(java.util.Calendar.MONTH)<v_Calendar.getCalendar().get(java.util.Calendar.MONTH))
          {
              band = true;
          }

          else if (v_Calendar2.getCalendar().get(java.util.Calendar.MONTH)==v_Calendar.getCalendar().get(java.util.Calendar.MONTH))
          {
                    if(v_Calendar2.getCalendar().get(java.util.Calendar.DATE)<v_Calendar.getCalendar().get(java.util.Calendar.DATE))
                    {
                         band = true;
                    }


          }
   }
        if(band == false)
        {
           try {
               in = 0;
               actv = true;
               reporteFecha(fecha_in, fecha_fin,in,registros,actv);

            } catch (ClassNotFoundException ex) {
               Logger.getLogger(ReportesFecha.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        if(band == true)
        {
           Funciones.imprimirMsj("La fecha Fin Debe Ser Mayor a la Fecha Inicio");
             vTReportes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Movimiento", "Fecha", "Sucursal", "Clave Empleado", "No. Tarjeta", "Nombre Socio" ,"Monto"
            }
            ) {

            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

           boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

                @Override
              public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

                @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        vTReportes.setName("vTReportes"); // NOI18N
        jScrollPane1.setViewportView(vTReportes);
         vTReportes.setRowHeight(14);
          vTReportes.setEditingRow(5);
          javax.swing.table.TableColumn colum= null;

          colum = vTReportes.getColumnModel().getColumn(0);
          colum.setPreferredWidth(70);

          colum = vTReportes.getColumnModel().getColumn(1);
          colum.setPreferredWidth(120);

          colum = vTReportes.getColumnModel().getColumn(2); // sucursal
          colum.setPreferredWidth(283);

          colum = vTReportes.getColumnModel().getColumn(3); // clave empleado
          colum.setPreferredWidth(100);

          colum = vTReportes.getColumnModel().getColumn(4);
          colum.setPreferredWidth(83);

          colum = vTReportes.getColumnModel().getColumn(5);
          colum.setPreferredWidth(243);

          colum = vTReportes.getColumnModel().getColumn(6);
          colum.setPreferredWidth(70);
        }
      }
    }//GEN-LAST:event_B_realizarbusquedaKeyReleased

    private void VSiguienteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_VSiguienteKeyReleased
        // TODO add your handling code here:
         if (evt.getKeyCode() == KeyEvent.VK_ENTER)
     {

        boolean band = false;
        boolean actv = false;

        //DateFormat fecha = v_Calendar
        String year = Integer.toString(v_Calendar.getCalendar().get(java.util.Calendar.YEAR));
        String month = Integer.toString(v_Calendar.getCalendar().get(java.util.Calendar.MONTH)+1);
        String day = Integer.toString(v_Calendar.getCalendar().get(java.util.Calendar.DATE));

        String year2 = Integer.toString(v_Calendar2.getCalendar().get(java.util.Calendar.YEAR));
        String month2 = Integer.toString(v_Calendar2.getCalendar().get(java.util.Calendar.MONTH)+1);
        String day2 = Integer.toString(v_Calendar2.getCalendar().get(java.util.Calendar.DATE));

        //System.out.println(year+"-"+month+"-"+day);
        //System.out.println(year2+"-"+month2+"-"+day2);
        String fecha_in = year+"-"+month+"-"+day;
        String fecha_fin = year2+"-"+month2+"-"+day2;
   if(v_Calendar2.getCalendar().get(java.util.Calendar.YEAR)<v_Calendar.getCalendar().get(java.util.Calendar.YEAR))
   {
        band = true;

   }

   else if (v_Calendar2.getCalendar().get(java.util.Calendar.YEAR)==v_Calendar.getCalendar().get(java.util.Calendar.YEAR))
   {
          if(v_Calendar2.getCalendar().get(java.util.Calendar.MONTH)<v_Calendar.getCalendar().get(java.util.Calendar.MONTH))
          {
              band = true;
          }

          else if (v_Calendar2.getCalendar().get(java.util.Calendar.MONTH)==v_Calendar.getCalendar().get(java.util.Calendar.MONTH))
          {
                    if(v_Calendar2.getCalendar().get(java.util.Calendar.DATE)<v_Calendar.getCalendar().get(java.util.Calendar.DATE))
                    {
                         band = true;
                    }


          }
   }
        if(band == false)
        {
           try {
               in = in + rest_sum;
               reporteFecha(fecha_in, fecha_fin,in,registros,actv);
            } catch (ClassNotFoundException ex) {
               Logger.getLogger(ReportesFecha.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        if(band == true)
        {
           Funciones.imprimirMsj("La fecha Fin Debe Ser Mayor a la Fecha Inicio");
        }
     }
    }//GEN-LAST:event_VSiguienteKeyReleased

    private void VSiguienteMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_VSiguienteMouseReleased
        // TODO add your handling code here:
         boolean band = false;
         boolean actv = false;

        //DateFormat fecha = v_Calendar
        String year = Integer.toString(v_Calendar.getCalendar().get(java.util.Calendar.YEAR));
        String month = Integer.toString(v_Calendar.getCalendar().get(java.util.Calendar.MONTH)+1);
        String day = Integer.toString(v_Calendar.getCalendar().get(java.util.Calendar.DATE));

        String year2 = Integer.toString(v_Calendar2.getCalendar().get(java.util.Calendar.YEAR));
        String month2 = Integer.toString(v_Calendar2.getCalendar().get(java.util.Calendar.MONTH)+1);
        String day2 = Integer.toString(v_Calendar2.getCalendar().get(java.util.Calendar.DATE));

        //System.out.println(year+"-"+month+"-"+day);
        //System.out.println(year2+"-"+month2+"-"+day2);
        String fecha_in = year+"-"+month+"-"+day;
        String fecha_fin = year2+"-"+month2+"-"+day2;
   if(v_Calendar2.getCalendar().get(java.util.Calendar.YEAR)<v_Calendar.getCalendar().get(java.util.Calendar.YEAR))
   {
        band = true;

   }

   else if (v_Calendar2.getCalendar().get(java.util.Calendar.YEAR)==v_Calendar.getCalendar().get(java.util.Calendar.YEAR))
   {
          if(v_Calendar2.getCalendar().get(java.util.Calendar.MONTH)<v_Calendar.getCalendar().get(java.util.Calendar.MONTH))
          {
              band = true;
          }

          else if (v_Calendar2.getCalendar().get(java.util.Calendar.MONTH)==v_Calendar.getCalendar().get(java.util.Calendar.MONTH))
          {
                    if(v_Calendar2.getCalendar().get(java.util.Calendar.DATE)<v_Calendar.getCalendar().get(java.util.Calendar.DATE))
                    {
                         band = true;
                    }


          }
   }
        if(band == false)
        {
           try {
               in = in + rest_sum;
               reporteFecha(fecha_in, fecha_fin,in,registros,actv);
            } catch (ClassNotFoundException ex) {
               Logger.getLogger(ReportesFecha.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        if(band == true)
        {
           Funciones.imprimirMsj("La fecha Fin Debe Ser Mayor a la Fecha Inicio");
        }
    }//GEN-LAST:event_VSiguienteMouseReleased

    private void VAnteriorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_VAnteriorKeyReleased
        // TODO add your handling code here
         if (evt.getKeyCode() == KeyEvent.VK_ENTER)
       {

            boolean band = false;
            boolean actv = false;

        //DateFormat fecha = v_Calendar
        String year = Integer.toString(v_Calendar.getCalendar().get(java.util.Calendar.YEAR));
        String month = Integer.toString(v_Calendar.getCalendar().get(java.util.Calendar.MONTH)+1);
        String day = Integer.toString(v_Calendar.getCalendar().get(java.util.Calendar.DATE));

        String year2 = Integer.toString(v_Calendar2.getCalendar().get(java.util.Calendar.YEAR));
        String month2 = Integer.toString(v_Calendar2.getCalendar().get(java.util.Calendar.MONTH)+1);
        String day2 = Integer.toString(v_Calendar2.getCalendar().get(java.util.Calendar.DATE));

        //System.out.println(year+"-"+month+"-"+day);
        //System.out.println(year2+"-"+month2+"-"+day2);
        String fecha_in = year+"-"+month+"-"+day;
        String fecha_fin = year2+"-"+month2+"-"+day2;
   if(v_Calendar2.getCalendar().get(java.util.Calendar.YEAR)<v_Calendar.getCalendar().get(java.util.Calendar.YEAR))
   {
        band = true;

   }

   else if (v_Calendar2.getCalendar().get(java.util.Calendar.YEAR)==v_Calendar.getCalendar().get(java.util.Calendar.YEAR))
   {
          if(v_Calendar2.getCalendar().get(java.util.Calendar.MONTH)<v_Calendar.getCalendar().get(java.util.Calendar.MONTH))
          {
              band = true;
          }

          else if (v_Calendar2.getCalendar().get(java.util.Calendar.MONTH)==v_Calendar.getCalendar().get(java.util.Calendar.MONTH))
          {
                    if(v_Calendar2.getCalendar().get(java.util.Calendar.DATE)<v_Calendar.getCalendar().get(java.util.Calendar.DATE))
                    {
                         band = true;
                    }


          }
   }
        if(band == false)
        {
           try {
               in = in - rest_sum;
               if(in>=0)
               {

                reporteFecha(fecha_in, fecha_fin,in,registros,actv);
               }
               else
               {
                 in=0;
               }

            } catch (ClassNotFoundException ex) {
               Logger.getLogger(ReportesFecha.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        if(band == true)
        {
           Funciones.imprimirMsj("La fecha Fin Debe Ser Mayor a la Fecha Inicio");
        }
      }
    }//GEN-LAST:event_VAnteriorKeyReleased

    private void VAnteriorMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_VAnteriorMouseReleased
        // TODO add your handling code here:
         boolean band = false;
            boolean actv = false;

        //DateFormat fecha = v_Calendar
        String year = Integer.toString(v_Calendar.getCalendar().get(java.util.Calendar.YEAR));
        String month = Integer.toString(v_Calendar.getCalendar().get(java.util.Calendar.MONTH)+1);
        String day = Integer.toString(v_Calendar.getCalendar().get(java.util.Calendar.DATE));

        String year2 = Integer.toString(v_Calendar2.getCalendar().get(java.util.Calendar.YEAR));
        String month2 = Integer.toString(v_Calendar2.getCalendar().get(java.util.Calendar.MONTH)+1);
        String day2 = Integer.toString(v_Calendar2.getCalendar().get(java.util.Calendar.DATE));

        //System.out.println(year+"-"+month+"-"+day);
        //System.out.println(year2+"-"+month2+"-"+day2);
        String fecha_in = year+"-"+month+"-"+day;
        String fecha_fin = year2+"-"+month2+"-"+day2;
   if(v_Calendar2.getCalendar().get(java.util.Calendar.YEAR)<v_Calendar.getCalendar().get(java.util.Calendar.YEAR))
   {
        band = true;

   }

   else if (v_Calendar2.getCalendar().get(java.util.Calendar.YEAR)==v_Calendar.getCalendar().get(java.util.Calendar.YEAR))
   {
          if(v_Calendar2.getCalendar().get(java.util.Calendar.MONTH)<v_Calendar.getCalendar().get(java.util.Calendar.MONTH))
          {
              band = true;
          }

          else if (v_Calendar2.getCalendar().get(java.util.Calendar.MONTH)==v_Calendar.getCalendar().get(java.util.Calendar.MONTH))
          {
                    if(v_Calendar2.getCalendar().get(java.util.Calendar.DATE)<v_Calendar.getCalendar().get(java.util.Calendar.DATE))
                    {
                         band = true;
                    }


          }
   }
        if(band == false)
        {
           try {
               in = in - rest_sum;
               if(in>=0)
               {
                 reporteFecha(fecha_in, fecha_fin,in,registros,actv);
               }
               else
               {
                   in=0;
               }

            } catch (ClassNotFoundException ex) {
               Logger.getLogger(ReportesFecha.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        if(band == true)
        {
           Funciones.imprimirMsj("La fecha Fin Debe Ser Mayor a la Fecha Inicio");
        }
    }//GEN-LAST:event_VAnteriorMouseReleased

    private void B_ImprimirFechasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_B_ImprimirFechasKeyReleased
        // TODO add your handling code here:
      
     
        if (evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
           boolean band = false;
           //DateFormat fecha = v_Calendar
           String year = Integer.toString(v_Calendar.getCalendar().get(java.util.Calendar.YEAR));
           String month = Integer.toString(v_Calendar.getCalendar().get(java.util.Calendar.MONTH)+1);
           String day = Integer.toString(v_Calendar.getCalendar().get(java.util.Calendar.DATE));

           String year2 = Integer.toString(v_Calendar2.getCalendar().get(java.util.Calendar.YEAR));
           String month2 = Integer.toString(v_Calendar2.getCalendar().get(java.util.Calendar.MONTH)+1);
           String day2 = Integer.toString(v_Calendar2.getCalendar().get(java.util.Calendar.DATE));

           //System.out.println(year+"-"+month+"-"+day);
           //System.out.println(year2+"-"+month2+"-"+day2);
           LeeFichero leeFicha = new LeeFichero();
           leeFicha.leerFichero();
           String idsucursal = leeFicha.vsucusal;
           String fecha_in = year+"-"+month+"-"+day;
           String fecha_fin = year2+"-"+month2+"-"+day2;
           if(v_Calendar2.getCalendar().get(java.util.Calendar.YEAR)<v_Calendar.getCalendar().get(java.util.Calendar.YEAR))
          {
              band = true;

          }

          else if (v_Calendar2.getCalendar().get(java.util.Calendar.YEAR)==v_Calendar.getCalendar().get(java.util.Calendar.YEAR))
          {
              if(v_Calendar2.getCalendar().get(java.util.Calendar.MONTH)<v_Calendar.getCalendar().get(java.util.Calendar.MONTH))
             {
                  band = true;
             }

             else if (v_Calendar2.getCalendar().get(java.util.Calendar.MONTH)==v_Calendar.getCalendar().get(java.util.Calendar.MONTH))
             {
                  if(v_Calendar2.getCalendar().get(java.util.Calendar.DATE)<v_Calendar.getCalendar().get(java.util.Calendar.DATE))
                    {
                         band = true;
                    }


            }
         }
         if(band == false)
         {
            String nomfecha_ini = (String) v_Calendar.getSelectedItem();
            String nomfecha_fin = (String) v_Calendar2.getSelectedItem();
            jasper = new IniciarReporteFecha ();
            jasper.ejecutarReporte(fecha_in, fecha_fin, idsucursal,nomfecha_ini,nomfecha_fin);
            
         }

        if(band == true)
        {
           Funciones.imprimirMsj("La fecha Fin Debe Ser Mayor a la Fecha Inicio");
       
        }





        }// fin de if enter


    


    }//GEN-LAST:event_B_ImprimirFechasKeyReleased

    private void B_ImprimirFechasMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_B_ImprimirFechasMouseReleased
        // TODO add your handling code here:
        boolean band = false;
           //DateFormat fecha = v_Calendar
           String year = Integer.toString(v_Calendar.getCalendar().get(java.util.Calendar.YEAR));
           String month = Integer.toString(v_Calendar.getCalendar().get(java.util.Calendar.MONTH)+1);
           String day = Integer.toString(v_Calendar.getCalendar().get(java.util.Calendar.DATE));

           String year2 = Integer.toString(v_Calendar2.getCalendar().get(java.util.Calendar.YEAR));
           String month2 = Integer.toString(v_Calendar2.getCalendar().get(java.util.Calendar.MONTH)+1);
           String day2 = Integer.toString(v_Calendar2.getCalendar().get(java.util.Calendar.DATE));

           //System.out.println(year+"-"+month+"-"+day);
           //System.out.println(year2+"-"+month2+"-"+day2);
           LeeFichero leeFicha = new LeeFichero();
           leeFicha.leerFichero();
           String idsucursal = leeFicha.vsucusal;
           String fecha_in = year+"-"+month+"-"+day;
           String fecha_fin = year2+"-"+month2+"-"+day2;
           if(v_Calendar2.getCalendar().get(java.util.Calendar.YEAR)<v_Calendar.getCalendar().get(java.util.Calendar.YEAR))
          {
              band = true;

          }

          else if (v_Calendar2.getCalendar().get(java.util.Calendar.YEAR)==v_Calendar.getCalendar().get(java.util.Calendar.YEAR))
          {
              if(v_Calendar2.getCalendar().get(java.util.Calendar.MONTH)<v_Calendar.getCalendar().get(java.util.Calendar.MONTH))
             {
                  band = true;
             }

             else if (v_Calendar2.getCalendar().get(java.util.Calendar.MONTH)==v_Calendar.getCalendar().get(java.util.Calendar.MONTH))
             {
                  if(v_Calendar2.getCalendar().get(java.util.Calendar.DATE)<v_Calendar.getCalendar().get(java.util.Calendar.DATE))
                    {
                         band = true;
                    }


            }
         }
         if(band == false)
         {
            String nomfecha_ini = (String) v_Calendar.getSelectedItem();
            String nomfecha_fin = (String) v_Calendar2.getSelectedItem();
            jasper = new IniciarReporteFecha ();
            jasper.ejecutarReporte(fecha_in, fecha_fin, idsucursal,nomfecha_ini,nomfecha_fin);

         }

        if(band == true)
        {
           Funciones.imprimirMsj("La fecha Fin Debe Ser Mayor a la Fecha Inicio");

        }
    }//GEN-LAST:event_B_ImprimirFechasMouseReleased

    private void vTReportesMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vTReportesMouseReleased
        // TODO add your handling code here:
        if (evt.getClickCount() == 2) {
         //int row = vTReportes;
         //DefaultTableModel modelo = (DefaultTableModel) vTReportes.getModel();
         //modelo.
         int fila = vTReportes.rowAtPoint(evt.getPoint());
         int columna = vTReportes.columnAtPoint(evt.getPoint());
         if ((fila > -1) && (columna > -1))
         {
            System.out.println(vTReportes.getValueAt(fila,0));
            Object idmov =  vTReportes.getValueAt(fila,0);
            String idmovimiento = idmov.toString();
            //System.out.println(idmovimiento+" "+"esta id elegiste");
            //Funciones.imprimirMsj("hiciste doble click");

            String fecha_in = (String) v_Calendar.getSelectedItem();
            String fecha_fin = (String) v_Calendar2.getSelectedItem();



            ReportesDetallesFecha detallesFecha = new ReportesDetallesFecha(idmovimiento,fecha_in,fecha_fin);
            detallesFecha.setLocationRelativeTo(null);
            detallesFecha.getContentPane().setBackground(Color.decode("#7329ab"));
            //lo hacemos visible
            detallesFecha.setVisible(true);



    } // fin de if


    } // fin de if doble clic

    }//GEN-LAST:event_vTReportesMouseReleased

    private void vTReportesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_vTReportesKeyReleased
        // TODO add your handling code here:
       
        if (evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
             int fila = vTReportes.getSelectedRow();
             int columna = vTReportes.getSelectedColumn();
             if ((fila > -1) && (columna > -1))
             {
                System.out.println(vTReportes.getValueAt(fila,0));
                Object idmov =  vTReportes.getValueAt(fila,0);
                String idmovimiento = idmov.toString();
                //System.out.println(idmovimiento+" "+"esta id elegiste");
                //Funciones.imprimirMsj("hiciste enter");

               

                //String prueba = (String) v_Calendar.getSelectedItem();
                //System.out.println(prueba);

                String fecha_in = (String) v_Calendar.getSelectedItem();
                String fecha_fin = (String) v_Calendar2.getSelectedItem();
                ReportesDetallesFecha detallesFecha = new ReportesDetallesFecha(idmovimiento,fecha_in,fecha_fin);
                //Menu f2 = new Menu();

                detallesFecha.setLocationRelativeTo(null);
                detallesFecha.getContentPane().setBackground(Color.decode("#7329ab"));
                //lo hacemos visible
                detallesFecha.setVisible(true);
             }
        } // fin if enter
    }//GEN-LAST:event_vTReportesKeyReleased

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReportesFecha().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton B_ImprimirFechas;
    private javax.swing.JButton B_realizarbusqueda;
    private javax.swing.JButton VAnterior;
    private javax.swing.JButton VSiguiente;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable vTReportes;
    private org.freixas.jcalendar.JCalendarCombo v_Calendar;
    private org.freixas.jcalendar.JCalendarCombo v_Calendar2;
    // End of variables declaration//GEN-END:variables


public void reporteFecha (String inicio, String fin, int inc, int reg, boolean act) throws ClassNotFoundException
{

   String fecha_inicio = inicio;
   String fecha_fin = fin;
   String idsucursal = null;
   int inicios = inc;
   int registro = reg;
   boolean activarB = act;
   System.out.println(inicios+" "+registro);
   try
   {
      Class.forName("com.mysql.jdbc.Driver");
      //Establecer conexion a la base de datos
      LeeFichero leerFichero = new LeeFichero();
      leerFichero.leerFichero();
      idsucursal=leerFichero.vsucusal;
      Connection conectar = DriverManager.getConnection(conexion);
      //Crear objeto Statement para realizar queries a la base de datos
      Statement instruccion = conectar.createStatement();
      //Consultar a la base de datos para saber cuantos registros tenemos
      ResultSet rs = instruccion.executeQuery("SELECT * FROM movimientos AS mov, sucursal AS suc  WHERE " +
              "DATE(fecha) BETWEEN '"+fecha_inicio+"' AND '"+fecha_fin+"' AND mov.idsucursal=suc.idsucursal AND suc.estatus=1 AND mov.idsucursal="+idsucursal+" ORDER BY mov.idmovimientos");
      rs.last();
      int rowcont = rs.getRow();
      System.out.println(rowcont);
      if(inicios>rowcont)
      {
        in = in - rest_sum;
        inicios = inicios - rest_sum;
      }
      if(rowcont>0)
      {
          if(activarB==true)
          {
              VAnterior.setEnabled(true);
              VSiguiente.setEnabled(true);
              B_ImprimirFechas.setEnabled(true);
          }
      }
      else
      {
          VAnterior.setEnabled(false);
          VSiguiente.setEnabled(false);
          B_ImprimirFechas.setEnabled(false);
      }
      //rs.first();

      //La clase ResultSetMetaData contiene toda la información sobre los campos de base de datos contenidos en el ResultSet. Necesitamos preguntarle por el número de columnas y por la etiqueta para cada una de las columnas. Este es el código que lo hace
      //ResultSetMetaData metaDatos = rs.getMetaData();


      //int numeroColumnas = metaDatos.getColumnCount();

      ResultSet rs2 = instruccion.executeQuery("SELECT * FROM movimientos AS mov, sucursal AS suc  WHERE " +
              "DATE(fecha) BETWEEN '"+fecha_inicio+"' AND '"+fecha_fin+"' AND mov.idsucursal=suc.idsucursal AND suc.estatus=1 AND mov.idsucursal="+idsucursal+" ORDER BY mov.idmovimientos LIMIT "+inicios+","+registro+" ");

       ResultSetMetaData metaDatos2 = rs2.getMetaData();

      // Se obtiene el número de columnas.
      int numeroColumnas2 = metaDatos2.getColumnCount();

         System.out.println("Numero de Columnas= "+numeroColumnas2);


       //Cabecera
        String[] cabecera = new String[]
            {"Movimiento", "Fecha","Sucursal","Clave Empleado","No. Tarjeta","Nombre Socio", "Monto"};
            rs2.last();
            System.out.println("Numero de Registros= "+rs2.getRow());
            Object[][] m=new Object[rs2.getRow()][7];
            int i=0;
            rs2.first();
            do
            {

              m[i][0] = rs2.getObject("idmovimientos"); // movimiento
              m[i][1] = rs2.getObject("fecha");         // fecha
              m[i][2] = rs2.getObject("nombresucu");    // nombre de la sucursal
              m[i][3] = rs2.getObject("idempleado"); // nombre del empleado
              m[i][4] = rs2.getObject("no_tarjetazolbee"); // no. tarjeta zolbe
              m[i][5] = rs2.getObject("nombresocio");// nombre del socio
              m[i][6] = rs2.getObject("total");
              //System.out.println(m[i][1]);
             i++;
             }while(rs2.next());
            vTReportes.setModel(new javax.swing.table.DefaultTableModel(m,cabecera){
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class,  java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

                @Override
            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

                @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
          });

          //configuracion de mi lista
          vTReportes.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
          vTReportes.setBackground(Color.decode("#BAD405"));
          vTReportes.setRowHeight(14);
          vTReportes.setEditingRow(5);
          javax.swing.table.TableColumn colum= null;

          colum = vTReportes.getColumnModel().getColumn(0); //movimientos
          colum.setPreferredWidth(70);

          colum = vTReportes.getColumnModel().getColumn(1); // fecha
          colum.setPreferredWidth(120);

          colum = vTReportes.getColumnModel().getColumn(2); // sucursal
          colum.setPreferredWidth(283);

          colum = vTReportes.getColumnModel().getColumn(3); // clave empleado
          colum.setPreferredWidth(100);

          colum = vTReportes.getColumnModel().getColumn(4); // tarjeta
          colum.setPreferredWidth(83);

          colum = vTReportes.getColumnModel().getColumn(5); // tarjeta
          colum.setPreferredWidth(243);

          colum = vTReportes.getColumnModel().getColumn(6); // tarjeta
          colum.setPreferredWidth(70);

            instruccion.close();
            System.out.println("Se cargo correctamente la lista.");

   } // fin de try
   catch(Exception es)
   {
       vTReportes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
               "Movimiento", "Fecha","Sucursal","Clave Empleado","No. Tarjeta","Nombre Socio", "Monto"
            }
            ) {

            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

           boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

                @Override
              public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

                @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        vTReportes.setName("vTReportes"); // NOI18N
        jScrollPane1.setViewportView(vTReportes);
         vTReportes.setRowHeight(14);
          vTReportes.setEditingRow(5);
          javax.swing.table.TableColumn colum= null;

          colum = vTReportes.getColumnModel().getColumn(0);
          colum.setPreferredWidth(60);

          colum = vTReportes.getColumnModel().getColumn(1);
          colum.setPreferredWidth(120);

          colum = vTReportes.getColumnModel().getColumn(2); // sucursal
          colum.setPreferredWidth(283);

          colum = vTReportes.getColumnModel().getColumn(3); // clave empleado
          colum.setPreferredWidth(100);

          colum = vTReportes.getColumnModel().getColumn(4);
          colum.setPreferredWidth(83);

          colum = vTReportes.getColumnModel().getColumn(5);
          colum.setPreferredWidth(243);

          colum = vTReportes.getColumnModel().getColumn(6);
          colum.setPreferredWidth(70);

      es.printStackTrace();

   } // fin de catch

  } //fin de método reporteFecha

} // fin de la clase ReportesFecha

